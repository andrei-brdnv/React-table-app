{"version":3,"sources":["components/color-picker/index.js","components/data-item/index.js","redux/actions/index.js","redux/types.js","selectors/index.js","components/data-list/index.js","components/data-form/index.js","components/select-filter/index.js","App.js","data.js","redux/reducers/filtersReducer.js","redux/store/index.js","redux/reducers/dataReducer.js","redux/middleware/generate-id.js","redux/middleware/logger.js","redux/middleware/hexToRgb.js","index.js"],"names":["ColorPicker","state","displayColorPicker","isShown","handleClick","setState","handleClose","handleChangeComplete","color","props","onColorChange","console","log","styles","display","height","borderRadius","background","this","popover","position","zIndex","cover","top","right","bottom","left","style","swatch","onClick","width","onChangeComplete","React","Component","DataItem","name","type","colorRgb","isEditing","copied","mapDataToState","dataItem","hexToRgb","hex","handleEdit","handleDelete","deleteDataItem","id","isValidForm","every","isValidField","length","limits","min","getClassName","handleSubmit","event","preventDefault","editDataItem","handleChange","value","target","max","handleColorChange","renderForm","renderItem","className","text","onCopy","icon","onSubmit","onChange","placeholder","autoFocus","disabled","connect","dispatch","payload","editedValue","filteredDataSelector","createSelector","store","filters","data","selected","filter","find","DataList","onDragEnd","result","reorderItems","destination","reorderedData","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","ignoreContainerClipping","provided","snapshot","ref","innerRef","droppableProps","getListStyle","isDraggingOver","map","key","draggableId","draggableProps","dragHandleProps","getItemStyle","isDragging","draggableStyle","DataForm","addDataItem","generateId","customStyles","control","SelectFilter","options","label","handleSelectChange","selectedOption","changeSelection","selectedOptions","isMulti","mapDispatchToProps","library","add","faTrashAlt","faEdit","App","defaultFilters","reducer","combineReducers","initState","action","randomId","newState","Object","assign","filtersState","persistConfig","storage","whitelist","rootReducer","persistReducer","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","next","uuidv4","getState","createStore","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"uSAmEeA,E,4MA/DXC,MAAQ,CACJC,oBAAoB,EACpBC,SAAS,G,EAGbC,YAAc,WACV,EAAKC,SAAS,CAACH,oBAAqB,EAAKD,MAAMC,sB,EAGnDI,YAAc,WACV,EAAKD,SAAS,CAACH,oBAAoB,K,EAGvCK,qBAAuB,SAACC,GACpB,EAAKC,MAAMC,cAAcF,I,uDAIzBG,QAAQC,IAAI,sBACZ,IAAMC,EAAS,CACXL,MAAO,CACHM,QAAS,OACTC,OAAQ,OACRC,aAAc,OACdC,WAAW,GAAD,OAAKC,KAAKT,MAAMD,QAU9BW,QAAS,CACLC,SAAU,WACVC,OAAQ,KAEZC,MAAO,CACHF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,QAId,OACI,6BACI,yBAAKC,MAAOd,EAAOe,OAAQC,QAASX,KAAKd,aACrC,yBAAKuB,MAAOd,EAAOL,SAGnBU,KAAKjB,MAAMC,mBAAqB,yBAAKyB,MAAOd,EAAOM,SAC/C,yBAAKQ,MAAOd,EAAOS,MAAOO,QAASX,KAAKZ,cACxC,kBAAC,eAAD,CAAcwB,MAAM,OAAOtB,MAAOU,KAAKT,MAAMD,MAAOuB,iBAAkBb,KAAKX,wBACtE,U,GAzDHyB,IAAMC,W,gBCI1BC,E,4MACFjC,MAAQ,CACJkC,KAAM,GACNC,KAAM,GACN5B,MAAO,GACP6B,SAAU,GACVC,WAAW,EACXC,QAAQ,G,EAGZC,eAAiB,WAAO,IACbC,EAAY,EAAKhC,MAAjBgC,SACP,EAAKpC,SAAS,CACV8B,KAAMM,EAASN,KAAOM,EAASN,KAAO,GACtCC,KAAMK,EAASL,KAAOK,EAASL,KAAO,GACtC5B,MAAOiC,EAASjC,MAAQiC,EAASjC,MAAQ,GACzC6B,SAAUI,EAASJ,SAAWI,EAASJ,SAAW,M,EA8C1DK,SAAW,SAACC,GACRhC,QAAQC,IAAI,YACQ+B,EAAI,GAAKA,EAAI,GAAeA,EAAI,GAAKA,EAAI,GAAeA,EAAI,GAAKA,EAAI,I,EAG7FC,WAAa,WACTjC,QAAQC,IAAI,eACZ,EAAKP,SAAS,CAACiC,WAAY,EAAKrC,MAAMqC,YACtC,EAAKE,kB,EAGTK,aAAe,WACX,EAAKpC,MAAMqC,eAAe,EAAKrC,MAAMgC,SAASM,K,EA6ClDC,YAAc,iBAAM,CAAC,OAAQ,QAAQC,MAAM,EAAKC,e,EAEhDA,aAAe,SAACd,GAAD,OAAU,EAAKnC,MAAMmC,GAAMe,QAAUC,EAAOhB,GAAMiB,K,EAEjEC,aAAe,SAAClB,GAAD,OAAW,EAAKc,aAAad,GAAQ,QAAU,gB,EAE9DmB,aAAe,SAACC,GACZA,EAAMC,iBADgB,IAEfhB,EAAY,EAAKhC,MAAjBgC,SACP,EAAKpC,SAAS,CAACiC,WAAY,EAAKrC,MAAMqC,YACtC,EAAK7B,MAAMiD,aAAajB,EAASM,GAAI,EAAK9C,Q,EAG9C0D,aAAe,SAACvB,GAAD,OAAU,SAACoB,GAAW,IAC1BI,EAASJ,EAAMK,OAAfD,MACHA,EAAMT,OAASC,EAAOhB,GAAM0B,KAChC,EAAKzD,SAAL,eACK+B,EAAOwB,M,EAIhBG,kBAAoB,SAACvD,GACjB,EAAKH,SAAS,CAACG,MAAOA,EAAMmC,O,uDAzHtB,IACCL,EAAapB,KAAKjB,MAAlBqC,UACP,OACI,6BACKA,EAAYpB,KAAK8C,aAAe9C,KAAK+C,gB,mCAKpC,IAAD,OACTtD,QAAQC,IAAI,mBADH,IAEF6B,EAAYvB,KAAKT,MAAjBgC,SACP,OACI,yBAAKyB,UAAU,wBACX,yBAAKA,UAAU,kBACX,2BAAIzB,EAASN,OAEjB,yBAAK+B,UAAU,kBACX,2BAAIzB,EAASL,OAEjB,yBAAK8B,UAAU,mBAAmBvC,MAAO,CAACV,WAAYwB,EAASjC,QAC3D,kBAAC,kBAAD,CAAiB2D,KAAM1B,EAASjC,MAAO4D,OAAQ,kBAAM,EAAK/D,SAAS,CAACkC,QAAQ,MACxE,yBAAK2B,UAAU,kBACVhD,KAAKjB,MAAMsC,OAAS,wCAAsB,+DAGnD,kBAAC,kBAAD,CAAiB4B,KAAM1B,EAASJ,SAAU+B,OAAQ,kBAAM,EAAK/D,SAAS,CAACkC,QAAQ,MAC3E,yBAAK2B,UAAU,kBACVhD,KAAKjB,MAAMsC,OAAS,wCAAsB,gEAIvD,yBAAK2B,UAAU,mBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAiBA,UAAU,YAAYrC,QAASX,KAAK0B,WAAYyB,KAAK,SACtE,kBAAC,IAAD,CAAiBH,UAAU,cAAcrC,QAASX,KAAK2B,aAAcwB,KAAK,mB,mCAwB1F,OADA1D,QAAQC,IAAI,gCAER,0BAAM0D,SAAUpD,KAAKqC,aAAcW,UAAU,wBACzC,yBAAKA,UAAU,kBACX,2BACIA,UAAWhD,KAAKoC,aAAa,QAC7BM,MAAO1C,KAAKjB,MAAMkC,KAClBoC,SAAUrD,KAAKyC,aAAa,QAC5Ba,YAAY,UACZC,WAAW,KAGnB,yBAAKP,UAAU,kBACX,2BACIA,UAAWhD,KAAKoC,aAAa,QAC7BM,MAAO1C,KAAKjB,MAAMmC,KAClBmC,SAAUrD,KAAKyC,aAAa,QAC5Ba,YAAY,aAGpB,yBAAKN,UAAU,oBACX,kBAAC,EAAD,CACI1D,MAAOU,KAAKjB,MAAMO,MAClBE,cAAeQ,KAAK6C,oBAExB,yBAAKG,UAAU,mBACX,yDAGR,yBAAKA,UAAU,mBACX,4BACIA,UAAU,kBACVQ,UAAWxD,KAAK8B,eAFpB,iB,GA5GGf,aAiJjBmB,EAAS,CACXjB,KAAM,CACFkB,IAAK,EACLS,IAAK,IAET1B,KAAM,CACFiB,IAAK,EACLS,IAAK,KAIEa,cACX,MACA,SAACC,GAAD,MAAe,CACX9B,eAAgB,SAACC,GAAD,OAAQ6B,EC3JF,SAAC7B,GAC3B,MAAO,CACHX,KCZwB,mBDaxByC,QAAS,CAAC9B,ODwJuBD,CAAeC,KAChDW,aAAc,SAACX,EAAI+B,GAAL,OAAqBF,ECrJf,SAAC7B,EAAI+B,GAC7B,MAAO,CACH1C,KClBsB,iBDmBtByC,QAAS,CAAC9B,KAAI+B,gBDkJ8BpB,CAAaX,EAAI+B,QAJtDH,CAMbzC,G,SGpKW6C,EAAuBC,aAHL,SAACC,GAAD,OAAWA,EAAMC,WACpB,SAACD,GAAD,OAAWA,EAAME,QAKzC,SAACD,EAASC,GAAU,IACTC,EAAYF,EAAZE,SACP,OAAOD,EAAKE,QAAO,SAAA5C,GACf,OACK2C,EAASjC,QAAUiC,EAASE,MAAK,SAACF,GAAD,OAAcA,EAASxB,QAAUnB,EAASM,Y,QCLtFwC,E,4MACFC,UAAY,SAAAC,GAAW,IAAD,EACoB,EAAKhF,MAApC0E,EADW,EACXA,KAAMD,EADK,EACLA,QAASQ,EADJ,EACIA,aAEtB,GAAKD,EAAOE,YAAZ,CAIA,IAQMC,EARU,SAACC,EAAMC,EAAYC,GAC/B,IAAMN,EAASO,MAAMC,KAAKJ,GADkB,EAE1BJ,EAAOS,OAAOJ,EAAY,GAArCK,EAFqC,oBAK5C,OAFAV,EAAOS,OAAOH,EAAU,EAAGI,GAEpBV,EAGWW,CAClBjB,EACAM,EAAOY,OAAOC,MACdb,EAAOE,YAAYW,OAGlBpB,EAAQE,SAASjC,QAAQuC,EAAaE,K,uDAI3CjF,QAAQC,IAAI,mBADP,IAEEuE,EAAQjE,KAAKT,MAAb0E,KACP,OACI,6BACI,kBAAC,IAAD,CAAiBK,UAAWtE,KAAKsE,WAC7B,kBAAC,IAAD,CAAWe,YAAY,OAAOC,yBAAuB,IAChD,SAACC,EAAUC,GAAX,OACG,uCACIC,IAAKF,EAASG,UACVH,EAASI,eAFjB,CAGIlF,MAAOmF,EAAaJ,EAASK,kBAE5B5B,EAAK6B,KAAI,SAACvE,EAAU6D,GAAX,OACN,kBAAC,IAAD,CAAWW,IAAKxE,EAASM,GAAImE,YAAazE,EAASM,GAAIuD,MAAOA,IACzD,SAACG,EAAUC,GAAX,OACG,yCACQD,EAASU,eACTV,EAASW,gBAFjB,CAGIzF,MAAO0F,EACHX,EAASY,WACTb,EAASU,eAAexF,OAE5BgF,IAAKF,EAASG,SACdK,IAAKxE,EAASM,KAEd,kBAAC,EAAD,CACIuD,MAAOA,EACP7D,SAAUA,IAEd,wBAAIyB,UAAU,cAK7BuC,EAASjC,sB,GA5DnBvC,aAsEjBoF,EAAe,SAACC,EAAYC,GAAb,oBACjBtG,WAAYqG,EACN,UACA,eACHC,IAIDT,EAAe,SAAAC,GAAc,MAAK,CACpC9F,WAAY8F,EACN,UACA,gBAaKpC,eATS,SAAAM,GAAK,MAAK,CAC9BE,KAAMJ,EAAqBE,GAC3BC,QAASD,EAAMC,YAGQ,SAACN,GAAD,MAAe,CACtCc,aAAc,SAACE,GAAD,OAAmBhB,EHpET,SAACgB,GAAD,MAAoB,CAC5CxD,KC3ByB,gBD4BzByC,QAAS,CAACe,kBGkEgCF,CAAaE,QAG5CjB,CAA6CY,GChGtDiC,E,4MACFvH,MAAQ,CACJkC,KAAM,GACNC,KAAM,GACN5B,MAAO,W,EA8CXwC,YAAc,iBAAM,CAAC,OAAQ,QAAQC,MAAM,EAAKC,e,EAEhDA,aAAe,SAACd,GAAD,OAAU,EAAKnC,MAAMmC,GAAMe,QAAUC,EAAOhB,GAAMiB,K,EAEjEC,aAAe,SAAClB,GAAD,OAAW,EAAKc,aAAad,GAAQ,QAAU,gB,EAE9DmB,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKhD,MAAMgH,YAAY,EAAKxH,OAC5B,EAAKI,SAAS,CACV8B,KAAM,GACNC,KAAM,M,EAIduB,aAAe,SAACvB,GAAD,OAAU,SAACoB,GAAW,IAC1BI,EAASJ,EAAMK,OAAfD,MACHA,EAAMT,OAASC,EAAOhB,GAAM0B,KAChC,EAAKzD,SAAL,eACK+B,EAAOwB,M,EAIhBG,kBAAoB,SAACvD,GACjB,EAAKH,SAAS,CAACG,MAAOA,EAAMmC,O,uDAjE5B,OADAhC,QAAQC,IAAI,mBAER,0BAAM0D,SAAUpD,KAAKqC,aAAcW,UAAU,wBACzC,yBAAKA,UAAU,kBACX,2BACIA,UAAWhD,KAAKoC,aAAa,QAC7BM,MAAO1C,KAAKjB,MAAMkC,KAClBoC,SAAUrD,KAAKyC,aAAa,QAC5Ba,YAAY,aAGpB,yBAAKN,UAAU,kBACX,2BACIA,UAAWhD,KAAKoC,aAAa,QAC7BM,MAAO1C,KAAKjB,MAAMmC,KAClBmC,SAAUrD,KAAKyC,aAAa,QAC5Ba,YAAY,aAGpB,yBAAKN,UAAU,oBACX,kBAAC,EAAD,CACI1D,MAAOU,KAAKjB,MAAMO,MAClBE,cAAeQ,KAAK6C,oBAExB,yBACIG,UAAU,mBAEV,yDAGR,yBAAKA,UAAU,mBACX,4BACIA,UAAU,cACVQ,UAAWxD,KAAK8B,eAFpB,a,GAvCGf,aA8EjBmB,EAAS,CACXjB,KAAM,CACFkB,IAAK,EACLS,IAAK,IAET1B,KAAM,CACFiB,IAAK,EACLS,IAAK,KAIEa,cACX,MACA,SAACC,GAAD,MAAe,CACX6C,YAAa,SAAChF,GAAD,OAAcmC,EJ/FR,SAACnC,GACxB,MAAO,CACHL,KCJqB,gBDKrByC,QAAS,CAACpC,YACViF,YAAY,EACZrF,UAAU,GI0F0BoF,CAAYhF,QAHzCkC,CAKb6C,G,SC9FIG,EAAe,CACjBC,QAAS,SAACnB,EAAUxG,GAAX,mBAAC,eACHwG,GADE,IAELzF,aAAc,QAIhB6G,E,4MAgBFC,QAAU,WACN,OAAO,EAAKrH,MAAM0E,KAAK6B,KAAI,SAAAvE,GAAQ,MAAK,CACpCmB,MAAOnB,EAASM,GAChBgF,MAAOtF,EAASN,U,EAIxB6F,mBAAqB,SAACC,GACK,OAAnBA,IACAA,EAAiB,IAGrB,EAAKxH,MAAMyH,gBAAgBD,I,uDAzB3B,OADAtH,QAAQC,IAAI,uBAER,yBAAKsD,UAAU,UACX,kBAAC,IAAD,CACIrD,OAAQ8G,EACRG,QAAS5G,KAAK4G,UACdlE,MAAO1C,KAAKT,MAAM0H,gBAClB5D,SAAUrD,KAAK8G,mBACfI,SAAO,S,GAVAnG,aAqCrBoG,EAAqB,CACvBH,gBLzB2B,SAAC9C,GAAD,MAAe,CAC1ChD,KCvB4B,mBDwB5ByC,QAAS,CAACO,eK0BCT,eATS,SAAAM,GAAK,MAAK,CAC9BE,KAAMF,EAAME,KACZgD,gBAAiBlD,EAAMC,QAAQE,YAOKiD,EAAzB1D,CAA6CkD,G,gBC7C5DS,IAAQC,IAAIC,IAAYC,K,IAgBTC,E,uKAZP,OACI,yBAAKxE,UAAU,kBACX,wBAAIA,UAAU,MAAd,YACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,wBAAIA,UAAU,gBACd,kBAAC,EAAD,W,GAREjC,a,gBCVH,GACX,CACI,GAAM,SACN,KAAQ,QACR,KAAQ,OACR,MAAS,UACT,SAAY,aAEhB,CACI,GAAM,SACN,KAAQ,QACR,KAAQ,OACR,MAAS,UACT,SAAY,aAEhB,CACI,GAAM,SACN,KAAQ,QACR,KAAQ,UACR,MAAS,UACT,SAAY,aAEhB,CACI,GAAM,SACN,KAAQ,QACR,KAAQ,WACR,MAAS,UACT,SAAY,eAEhB,CACI,GAAM,SACN,KAAQ,QACR,KAAQ,QACR,MAAS,UACT,SAAY,a,SChCd0G,EAAiB,CACnBvD,SAAU,I,0BCMRwD,EAAUC,YAAgB,CAC5B1D,KCPW,WAAqC,IAA3B2D,EAA0B,uDAAd3D,EAAM4D,EAAQ,uCAC/C,OAAQA,EAAO3G,MACX,ITJwB,mBSKpB,OAAO0G,EAAUzD,QAAO,SAAA5C,GAAQ,OAAIA,EAASM,KAAOgG,EAAOlE,QAAQ9B,MACvE,ITPqB,gBSQjB,MAAM,GAAN,mBACO+F,GADP,0BAGQ/F,GAAIgG,EAAOC,UACRD,EAAOlE,QAAQpC,UAJ1B,IAKQJ,SAAU0G,EAAO1G,aAG7B,ITdsB,iBSctB,MAC8B0G,EAAOlE,QAA1B9B,EADX,EACWA,GAAI+B,EADf,EACeA,YACLmE,EAAWH,EAAU9B,KAAI,SAAAvE,GAC3B,OAAIA,EAASM,KAAOA,EAAWmG,OAAOC,OAAO,GAAI1G,EAAUqC,GACpDrC,KAEX,OAAOwG,EACX,ITnBqB,gBSmBrB,IACWrD,EAAiBmD,EAAOlE,QAAxBe,cACP,OAAOA,EACX,QACI,OAAOkD,IDhBf5D,QDLW,WAAkD,IAAxCkE,EAAuC,uDAAxBT,EAAgBI,EAAQ,uCAC5D,OAAQA,EAAO3G,MACX,IPLwB,mBOMpB,OAAO,2BACAgH,GADP,IAEIhE,SAAU2D,EAAOlE,QAAQO,WAEjC,QACI,OAAOgE,MCAbC,EAAgB,CAClBpC,IAAK,OACLqC,YACAC,UAAW,CAAC,OAAQ,YAGlBC,EAAcC,YAAeJ,EAAeT,GAS5Cc,GANgB,kBAAXC,QACPA,OAAOC,qCACHD,OAAOC,qCAAqC,IAEvCC,KAGTC,aE5BW,SAAC7E,GAAD,OAAW,SAAC8E,GAAD,OAAU,SAAChB,GACjC,IAAKA,EAAOrB,WAAY,OAAOqC,EAAKhB,GACpCgB,EAAK,2BACEhB,GADH,IAEAC,SAAUgB,sBCNH,SAAC/E,GAAD,OAAW,SAAC8E,GAAD,OAAU,SAAChB,GACjCpI,QAAQC,IAAI,SAAUqE,EAAMgF,YAC5BtJ,QAAQC,IAAI,cAAemI,GAC3BgB,EAAKhB,GACLpI,QAAQC,IAAI,QAASqE,EAAMgF,iBCJhB,SAAChF,GAAD,OAAW,SAAC8E,GAAD,OAAU,SAAChB,GACjC,IAAkBpG,EAIlB,IAAKoG,EAAO1G,SAAU,OAAO0H,EAAKhB,GAClCgB,EAAK,2BACEhB,GADH,IAEA1G,UAPcM,EAOKoG,EAAOlE,QAAQpC,SAASjC,MAN3CG,QAAQC,IAAI,mBACL,CAAC,KAAO+B,EAAI,GAAKA,EAAI,GAAK,EAAG,KAAOA,EAAI,GAAKA,EAAI,GAAK,EAAG,KAAOA,EAAI,GAAKA,EAAI,GAAK,aJ+BpFsC,EAAQiF,YAAYV,EAAaE,GACjCS,EAAYC,YAAanF,G,UK5BtCoF,IAASC,OACL,kBAAC,IAAD,CAAUrF,MAAOA,GACb,kBAAC,KAAD,CAAakF,UAAWA,GACpB,kBAAC,EAAD,QAGRI,SAASC,eAAe,W","file":"static/js/main.0063094b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nclass ColorPicker extends React.Component {\r\n    state = {\r\n        displayColorPicker: false,\r\n        isShown: false\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false})\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.props.onColorChange(color)\r\n    };\r\n\r\n    render() {\r\n        console.log('render ColorPicker')\r\n        const styles = {\r\n            color: {\r\n                display: 'flex',\r\n                height: '40px',\r\n                borderRadius: '10px',\r\n                background: `${this.props.color}`,\r\n            },\r\n            /*swatch: {\r\n                padding: '5px',\r\n                background: '#fff',\r\n                borderRadius: '1px',\r\n                boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                display: 'inline-block',\r\n                cursor: 'pointer',\r\n            },*/\r\n            popover: {\r\n                position: 'absolute',\r\n                zIndex: '2',\r\n            },\r\n            cover: {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                right: '0px',\r\n                bottom: '0px',\r\n                left: '0px',\r\n            },\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={styles.swatch} onClick={this.handleClick}>\r\n                    <div style={styles.color} />\r\n                </div>\r\n                {\r\n                    this.state.displayColorPicker ? <div style={styles.popover}>\r\n                        <div style={styles.cover} onClick={this.handleClose}/>\r\n                        <SketchPicker width=\"auto\" color={this.props.color} onChangeComplete={this.handleChangeComplete}/>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorPicker\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteDataItem, editDataItem} from \"../../redux/actions\";\r\nimport ColorPicker from \"../color-picker\";\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass DataItem extends Component {\r\n    state = {\r\n        name: '',\r\n        type: '',\r\n        color: '',\r\n        colorRgb: '',\r\n        isEditing: false,\r\n        copied: false\r\n    }\r\n\r\n    mapDataToState = () => {\r\n        const {dataItem} = this.props\r\n        this.setState({\r\n            name: dataItem.name ? dataItem.name : '',\r\n            type: dataItem.type ? dataItem.type : '',\r\n            color: dataItem.color ? dataItem.color : '',\r\n            colorRgb: dataItem.colorRgb ? dataItem.colorRgb : ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {isEditing} = this.state\r\n        return (\r\n            <div>\r\n                {isEditing ? this.renderForm() : this.renderItem()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderItem() {\r\n        console.log('render DataItem')\r\n        const {dataItem} = this.props\r\n        return (\r\n            <div className=\"flex-container__form\">\r\n                <div className=\"flex-item__one\">\r\n                    <p>{dataItem.name}</p>\r\n                </div>\r\n                <div className=\"flex-item__two\">\r\n                    <p>{dataItem.type}</p>\r\n                </div>\r\n                <div className=\"flex-item__three\" style={{background: dataItem.color}}>\r\n                    <CopyToClipboard text={dataItem.color} onCopy={() => this.setState({copied: true})}>\r\n                        <div className=\"copy-hex-value\">\r\n                            {this.state.copied ? <span>Copied</span> : <span>Copy hex value to clipboard</span>}\r\n                        </div>\r\n                    </CopyToClipboard>\r\n                    <CopyToClipboard text={dataItem.colorRgb} onCopy={() => this.setState({copied: true})}>\r\n                        <div className=\"copy-rgb-value\">\r\n                            {this.state.copied ? <span>Copied</span> : <span>Copy rgb value to clipboard</span>}\r\n                        </div>\r\n                    </CopyToClipboard>\r\n                </div>\r\n                <div className=\"flex-item__four\">\r\n                    <div className=\"faicon\">\r\n                        <FontAwesomeIcon className=\"icon-edit\" onClick={this.handleEdit} icon=\"edit\"/>\r\n                        <FontAwesomeIcon className=\"icon-delete\" onClick={this.handleDelete} icon=\"trash-alt\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    hexToRgb = (hex) => {\r\n        console.log('hexToRgb')\r\n        const rgb = ['0x' + hex[1] + hex[2] | 0, '0x' + hex[3] + hex[4] | 0, '0x' + hex[5] + hex[6] | 0];\r\n    }\r\n\r\n    handleEdit = () => {\r\n        console.log('handle edit')\r\n        this.setState({isEditing: !this.state.isEditing})\r\n        this.mapDataToState()\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteDataItem(this.props.dataItem.id)\r\n    }\r\n\r\n    renderForm() {\r\n        console.log('render DataItem editing form')\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"flex-container__form\">\r\n                <div className=\"flex-item__one\">\r\n                    <input\r\n                        className={this.getClassName('name')}\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange('name')}\r\n                        placeholder=\"name...\"\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n                <div className=\"flex-item__two\">\r\n                    <input\r\n                        className={this.getClassName('type')}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChange('type')}\r\n                        placeholder=\"type...\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex-item__three\">\r\n                    <ColorPicker\r\n                        color={this.state.color}\r\n                        onColorChange={this.handleColorChange}\r\n                    />\r\n                    <div className=\"pick-color-hint\">\r\n                        <span>Click to change color</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-item__four\">\r\n                    <button\r\n                        className=\"btn btn-confirm\"\r\n                        disabled={!this.isValidForm()}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    isValidForm = () => ['name', 'type'].every(this.isValidField)\r\n\r\n    isValidField = (type) => this.state[type].length >= limits[type].min\r\n\r\n    getClassName = (type) => (this.isValidField(type) ? 'input' : 'input__error')\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const {dataItem} = this.props\r\n        this.setState({isEditing: !this.state.isEditing})\r\n        this.props.editDataItem(dataItem.id, this.state)\r\n    }\r\n\r\n    handleChange = (type) => (event) => {\r\n        const {value} = event.target\r\n        if (value.length > limits[type].max) return\r\n        this.setState({\r\n            [type]: value\r\n        })\r\n    }\r\n\r\n    handleColorChange = (color) => {\r\n        this.setState({color: color.hex})\r\n    }\r\n}\r\n\r\nconst limits = {\r\n    name: {\r\n        min: 3,\r\n        max: 25\r\n    },\r\n    type: {\r\n        min: 3,\r\n        max: 25\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    (dispatch) => ({\r\n        deleteDataItem: (id) => dispatch(deleteDataItem(id)),\r\n        editDataItem: (id, editedValue) => dispatch(editDataItem(id, editedValue))\r\n    })\r\n)(DataItem)","import {ADD_DATA_ITEM, CHANGE_SELECTION, DELETE_DATA_ITEM, EDIT_DATA_ITEM, REORDER_ITEMS} from \"../types\";\r\n\r\nexport const addDataItem = (dataItem) => {\r\n    return {\r\n        type: ADD_DATA_ITEM,\r\n        payload: {dataItem},\r\n        generateId: true,\r\n        colorRgb: true\r\n    }\r\n}\r\n\r\nexport const deleteDataItem = (id) => {\r\n    return {\r\n        type: DELETE_DATA_ITEM,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nexport const editDataItem = (id, editedValue) => {\r\n    return {\r\n        type: EDIT_DATA_ITEM,\r\n        payload: {id, editedValue}\r\n    }\r\n}\r\n\r\nexport const changeSelection = (selected) => ({\r\n    type: CHANGE_SELECTION,\r\n    payload: {selected}\r\n})\r\n\r\nexport const reorderItems = (reorderedData) => ({\r\n    type: REORDER_ITEMS,\r\n    payload: {reorderedData}\r\n})\r\n","export const ADD_DATA_ITEM = 'ADD_DATA_ITEM'\r\nexport const DELETE_DATA_ITEM = 'DELETE_DATA_ITEM'\r\nexport const EDIT_DATA_ITEM = 'EDIT_DATA_ITEM'\r\nexport const CHANGE_SELECTION = 'CHANGE_SELECTION'\r\nexport const REORDER_ITEMS = 'REORDER_ITEMS'","import {createSelector} from 'reselect'\r\n\r\nexport const filtersSelector = (store) => store.filters\r\nexport const dataSelector = (store) => store.data\r\n\r\nexport const filteredDataSelector = createSelector(\r\n    filtersSelector,\r\n    dataSelector,\r\n    (filters, data) => {\r\n        const {selected} = filters\r\n        return data.filter(dataItem => {\r\n            return (\r\n                !selected.length || selected.find((selected) => selected.value === dataItem.id)\r\n            )\r\n        })\r\n    }\r\n)","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport DataItem from \"../data-item\";\r\nimport {filteredDataSelector} from \"../../selectors\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {reorderItems} from \"../../redux/actions\";\r\n\r\nclass DataList extends Component {\r\n    onDragEnd = result => {\r\n        const {data, filters, reorderItems} = this.props\r\n\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const reorder = (list, startIndex, endIndex) => {\r\n            const result = Array.from(list);\r\n            const [removed] = result.splice(startIndex, 1);\r\n            result.splice(endIndex, 0, removed);\r\n\r\n            return result;\r\n        };\r\n\r\n        const reorderedData = reorder(\r\n            data,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        if (!filters.selected.length) reorderItems(reorderedData)\r\n    };\r\n\r\n    render() {\r\n        console.log('render DataList')\r\n        const {data} = this.props\r\n        return (\r\n            <div>\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    <Droppable droppableId=\"list\" ignoreContainerClipping>\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {data.map((dataItem, index) =>\r\n                                    <Draggable key={dataItem.id} draggableId={dataItem.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                                ref={provided.innerRef}\r\n                                                key={dataItem.id}\r\n                                            >\r\n                                                <DataItem\r\n                                                    index={index}\r\n                                                    dataItem={dataItem}\r\n                                                />\r\n                                                <hr className=\"hr\"/>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    background: isDragging\r\n        ? \"#fff59d\"\r\n        : \"transparent\",\r\n    ...draggableStyle\r\n    /*\"linear-gradient(to left, transparent, #fff59d 10%, #fff59d 90%, transparent 100%)\"*/\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver\r\n        ? \"#bdbdbd\"\r\n        : \"transparent\"\r\n    /*\"linear-gradient(to left, transparent, #bdbdbd 10%, #bdbdbd 90%, transparent 100%)\"*/\r\n});\r\n\r\nconst mapStateToProps = store => ({\r\n    data: filteredDataSelector(store),\r\n    filters: store.filters\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    reorderItems: (reorderedData) => dispatch(reorderItems(reorderedData))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DataList)","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addDataItem} from \"../../redux/actions\";\r\nimport ColorPicker from \"../color-picker\";\r\n\r\nclass DataForm extends Component {\r\n    state = {\r\n        name: '',\r\n        type: '',\r\n        color: '#ae8f87'\r\n    }\r\n\r\n    render() {\r\n        console.log('render DataForm')\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"flex-container__form\">\r\n                <div className=\"flex-item__one\">\r\n                    <input\r\n                        className={this.getClassName('name')}\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange('name')}\r\n                        placeholder=\"name...\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex-item__two\">\r\n                    <input\r\n                        className={this.getClassName('type')}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChange('type')}\r\n                        placeholder=\"type...\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex-item__three\">\r\n                    <ColorPicker\r\n                        color={this.state.color}\r\n                        onColorChange={this.handleColorChange}\r\n                    />\r\n                    <div\r\n                        className=\"pick-color-hint\"\r\n                    >\r\n                        <span>Click to select color</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex-item__four\">\r\n                    <button\r\n                        className=\"btn btn-add\"\r\n                        disabled={!this.isValidForm()}\r\n                    >\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    isValidForm = () => ['name', 'type'].every(this.isValidField)\r\n\r\n    isValidField = (type) => this.state[type].length >= limits[type].min\r\n\r\n    getClassName = (type) => (this.isValidField(type) ? 'input' : 'input__error')\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.props.addDataItem(this.state)\r\n        this.setState({\r\n            name: '',\r\n            type: ''\r\n        })\r\n    }\r\n\r\n    handleChange = (type) => (event) => {\r\n        const {value} = event.target\r\n        if (value.length > limits[type].max) return\r\n        this.setState({\r\n            [type]: value\r\n        })\r\n    }\r\n\r\n    handleColorChange = (color) => {\r\n        this.setState({color: color.hex})\r\n    }\r\n}\r\n\r\nconst limits = {\r\n    name: {\r\n        min: 3,\r\n        max: 25\r\n    },\r\n    type: {\r\n        min: 3,\r\n        max: 25\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    (dispatch) => ({\r\n        addDataItem: (dataItem) => dispatch(addDataItem(dataItem))\r\n    })\r\n)(DataForm)","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {changeSelection} from \"../../redux/actions\";\r\n\r\nconst customStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        borderRadius: '0',\r\n    })\r\n}\r\n\r\nclass SelectFilter extends Component {\r\n    render() {\r\n        console.log('render SelectFilter')\r\n        return (\r\n            <div className=\"select\">\r\n                <Select\r\n                    styles={customStyles}\r\n                    options={this.options()}\r\n                    value={this.props.selectedOptions}\r\n                    onChange={this.handleSelectChange}\r\n                    isMulti\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    options = () => {\r\n        return this.props.data.map(dataItem => ({\r\n            value: dataItem.id,\r\n            label: dataItem.name\r\n        }))\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        if (selectedOption === null) {\r\n            selectedOption = [];\r\n        }\r\n\r\n        this.props.changeSelection(selectedOption)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    data: store.data,\r\n    selectedOptions: store.filters.selected\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    changeSelection\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectFilter)","import React, {Component} from 'react';\nimport './App.css';\nimport DataList from \"./components/data-list\";\nimport DataForm from \"./components/data-form\";\nimport SelectFilter from \"./components/select-filter\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrashAlt, faEdit)\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"flex-container\">\n                <h1 className=\"h1\">App-name</h1>\n                <SelectFilter/>\n                <DataForm/>\n                <hr className=\"hr hr__form\"/>\n                <DataList/>\n            </div>\n        )\n    }\n}\n\nexport default App\n","export default [\r\n    {\r\n        \"id\": \"90ecf9\",\r\n        \"name\": \"name1\",\r\n        \"type\": \"main\",\r\n        \"color\": \"#00838f\",\r\n        \"colorRgb\": \"0,131,143\"\r\n    },\r\n    {\r\n        \"id\": \"12ecf9\",\r\n        \"name\": \"name2\",\r\n        \"type\": \"side\",\r\n        \"color\": \"#ffa000\",\r\n        \"colorRgb\": \"255,160,0\"\r\n    },\r\n    {\r\n        \"id\": \"32unf9\",\r\n        \"name\": \"name3\",\r\n        \"type\": \"primary\",\r\n        \"color\": \"#283593\",\r\n        \"colorRgb\": \"40,53,147\"\r\n    },\r\n    {\r\n        \"id\": \"3d56s7\",\r\n        \"name\": \"name4\",\r\n        \"type\": \"primary1\",\r\n        \"color\": \"#e57373\",\r\n        \"colorRgb\": \"229,115,115\"\r\n    },\r\n    {\r\n        \"id\": \"895ds1\",\r\n        \"name\": \"name5\",\r\n        \"type\": \"main1\",\r\n        \"color\": \"#612430\",\r\n        \"colorRgb\": \"97,36,48\"\r\n    }\r\n]","import {CHANGE_SELECTION} from \"../types\";\r\n\r\nconst defaultFilters = {\r\n    selected: []\r\n}\r\n\r\nexport default function (filtersState = defaultFilters, action) {\r\n    switch (action.type) {\r\n        case CHANGE_SELECTION:\r\n            return {\r\n                ...filtersState,\r\n                selected: action.payload.selected\r\n            }\r\n        default:\r\n            return filtersState\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport dataReducer from \"../reducers/dataReducer\";\r\nimport generateId from \"../middleware/generate-id\";\r\nimport logger from \"../middleware/logger\";\r\nimport filtersReducer from \"../reducers/filtersReducer\";\r\nimport hexToRgb from \"../middleware/hexToRgb\";\r\nimport {persistStore, persistReducer} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst reducer = combineReducers({\r\n    data: dataReducer,\r\n    filters: filtersReducer\r\n})\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['data', 'filters']\r\n}\r\n\r\nconst rootReducer = persistReducer(persistConfig, reducer)\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(generateId, logger, hexToRgb)\r\n    // other store enhancers if any\r\n);\r\n\r\nexport const store = createStore(rootReducer, enhancer)\r\nexport const persistor = persistStore(store)","import data from \"../../data\";\r\nimport {ADD_DATA_ITEM, DELETE_DATA_ITEM, EDIT_DATA_ITEM, REORDER_ITEMS} from \"../types\";\r\n\r\nexport default function (initState = data, action) {\r\n    switch (action.type) {\r\n        case DELETE_DATA_ITEM:\r\n            return initState.filter(dataItem => dataItem.id !== action.payload.id)\r\n        case ADD_DATA_ITEM:\r\n            return [\r\n                ...initState,\r\n                {\r\n                    id: action.randomId,\r\n                    ...action.payload.dataItem,\r\n                    colorRgb: action.colorRgb\r\n                }\r\n            ]\r\n        case EDIT_DATA_ITEM:\r\n            const {id, editedValue} = action.payload\r\n            const newState = initState.map(dataItem => {\r\n                if (dataItem.id === id) return Object.assign({}, dataItem, editedValue)\r\n                return dataItem\r\n            })\r\n            return newState\r\n        case REORDER_ITEMS:\r\n            const {reorderedData} = action.payload\r\n            return reorderedData\r\n        default:\r\n            return initState\r\n    }\r\n}","import {v4 as uuidv4} from 'uuid'\r\n\r\nexport default (store) => (next) => (action) => {\r\n    if (!action.generateId) return next(action)\r\n    next({\r\n        ...action,\r\n        randomId: uuidv4()\r\n    })\r\n}","export default (store) => (next) => (action) => {\r\n    console.log('before', store.getState());\r\n    console.log('dispatching', action);\r\n    next(action);\r\n    console.log('after', store.getState())\r\n}","export default (store) => (next) => (action) => {\r\n    const hexToRgb = (hex) => {\r\n        console.log('hexToRgb called')\r\n        return ['0x' + hex[1] + hex[2] | 0, '0x' + hex[3] + hex[4] | 0, '0x' + hex[5] + hex[6] | 0];\r\n    }\r\n    if (!action.colorRgb) return next(action)\r\n    next({\r\n        ...action,\r\n        colorRgb: hexToRgb(action.payload.dataItem.color)\r\n    })\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store, persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persistor}>\n            <App/>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}